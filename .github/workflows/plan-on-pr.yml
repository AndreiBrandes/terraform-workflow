name: Plan / Test On PR

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9
      - name: Run terraform fmt check
        run: terraform fmt -check -recursive ./terraform
  plan:
      name: Plan
      env:
        TF_VAR_allowed_account_id: ${{ secrets.ALLOWED_ACCOUNT_ID }}
      runs-on: ubuntu-20.04
      strategy:
        fail-fast: false
        matrix:
          path:
            - dev
            - stage
            - prod

      steps:
        - name: Check out code
          uses: actions/checkout@v2

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            terraform_version: 1.0.9

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-region: eu-north-1
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        - name: Initialize Terraform
          run: |
            cd terraform/${{ matrix.path }}
            terraform init -input=false          

        - name: Plan Terraform
          id: plan
          continue-on-error: true
          run: |
            cd terraform/${{ matrix.path }}
            terraform plan -input=false -no-color          

        - name: Post Plan to GitHub PR
          uses: mshick/add-pr-comment@v1
          with:
            allow-repeats: true
            repo-token: ${{ secrets.GITHUB_TOKEN }}
            repo-token-user-login: 'github-actions[bot]'
            message: |
              ## ${{ matrix.path }} plan
              ```
              ${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}
              ```        
 

